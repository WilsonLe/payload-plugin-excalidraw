diff --git a/.env.production b/.env.production
index 11e9fd84..78eeb026 100644
--- a/.env.production
+++ b/.env.production
@@ -4,13 +4,13 @@ VITE_APP_BACKEND_V2_POST_URL=https://json.excalidraw.com/api/v2/post/
 VITE_APP_LIBRARY_URL=https://libraries.excalidraw.com
 VITE_APP_LIBRARY_BACKEND=https://us-central1-excalidraw-room-persistence.cloudfunctions.net/libraries
 
-VITE_APP_PLUS_LP=https://plus.excalidraw.com
-VITE_APP_PLUS_APP=https://app.excalidraw.com
+# VITE_APP_PLUS_LP=https://plus.excalidraw.com
+# VITE_APP_PLUS_APP=https://app.excalidraw.com
 
-VITE_APP_AI_BACKEND=https://oss-ai.excalidraw.com
+# VITE_APP_AI_BACKEND=https://oss-ai.excalidraw.com
 
 # socket server URL used for collaboration
-VITE_APP_WS_SERVER_URL=https://oss-collab.excalidraw.com
+VITE_APP_WS_SERVER_URL=http://localhost:3002
 
 VITE_APP_FIREBASE_CONFIG='{"apiKey":"AIzaSyAd15pYlMci_xIp9ko6wkEsDzAAA0Dn0RU","authDomain":"excalidraw-room-persistence.firebaseapp.com","databaseURL":"https://excalidraw-room-persistence.firebaseio.com","projectId":"excalidraw-room-persistence","storageBucket":"excalidraw-room-persistence.appspot.com","messagingSenderId":"654800341332","appId":"1:654800341332:web:4a692de832b55bd57ce0c1"}'
 
diff --git a/excalidraw-app/index.tsx b/excalidraw-app/index.tsx
index 98c902e3..f03693d5 100644
--- a/excalidraw-app/index.tsx
+++ b/excalidraw-app/index.tsx
@@ -6,12 +6,18 @@ import "../excalidraw-app/sentry";
 
 import ExcalidrawApp from "./App";
 
-window.__EXCALIDRAW_SHA__ = import.meta.env.VITE_APP_GIT_SHA;
-const rootElement = document.getElementById("root")!;
-const root = createRoot(rootElement);
-registerSW();
-root.render(
-  <StrictMode>
-    <ExcalidrawApp />
-  </StrictMode>,
-);
+function mountExcalidraw(container: any) {
+  const root = createRoot(container);
+  registerSW();
+  root.render(
+    <StrictMode>
+      <ExcalidrawApp />
+    </StrictMode>
+  );
+}
+
+if (window) {
+  window.__EXCALIDRAW_SHA__ = import.meta.env.VITE_APP_GIT_SHA;
+  // @ts-ignore
+  window.mountExcalidraw = mountExcalidraw;
+}
diff --git a/excalidraw-app/vite.config.mts b/excalidraw-app/vite.config.mts
index f10e742f..7c2b6f43 100644
--- a/excalidraw-app/vite.config.mts
+++ b/excalidraw-app/vite.config.mts
@@ -8,18 +8,19 @@ import checker from "vite-plugin-checker";
 import { createHtmlPlugin } from "vite-plugin-html";
 import Sitemap from "vite-plugin-sitemap";
 import { woff2BrowserPlugin } from "../scripts/woff2/woff2-vite-plugins";
+
 export default defineConfig(({ mode }) => {
-  // To load .env variables
+  // Load .env variables from parent directory
   const envVars = loadEnv(mode, `../`);
-  // https://vitejs.dev/config/
+
   return {
+    define: {
+      "process.env": {}, // Replace process.env with an empty object
+    },
     server: {
       port: Number(envVars.VITE_APP_PORT || 3000),
-      // open the browser
       open: true,
     },
-    // We need to specify the envDir since now there are no
-    //more located in parallel with the vite.config.ts file but in parent dir
     envDir: "../",
     resolve: {
       alias: [
@@ -66,43 +67,48 @@ export default defineConfig(({ mode }) => {
       ],
     },
     build: {
+      // Library mode configuration:
+      lib: {
+        // Use your Excalidraw entry file as the library entry point.
+        entry: path.resolve(__dirname, "../packages/excalidraw/index.tsx"),
+        // Global variable name for your library (useful for UMD/IIFE builds)
+        name: "ExcalidrawLib",
+        // Formats the library exports
+        formats: ["umd"],
+        // Output file naming pattern
+        fileName: (format) => `excalidraw.${format}.js`,
+      },
       outDir: "build",
+      sourcemap: true,
+      // Do not inline small assets so that fonts etc. remain as separate files.
+      assetsInlineLimit: 0,
       rollupOptions: {
+        // Prevent bundling React and ReactDOM in your library.
+        external: ["react", "react-dom"],
         output: {
+          globals: {
+            react: "React",
+            "react-dom": "ReactDOM",
+          },
           assetFileNames(chunkInfo) {
             if (chunkInfo?.name?.endsWith(".woff2")) {
               const family = chunkInfo.name.split("-")[0];
               return `fonts/${family}/[name][extname]`;
             }
-
             return "assets/[name]-[hash][extname]";
           },
-          // Creating separate chunk for locales except for en and percentages.json so they
-          // can be cached at runtime and not merged with
-          // app precache. en.json and percentages.json are needed for first load
-          // or fallback hence not clubbing with locales so first load followed by offline mode works fine. This is how CRA used to work too.
-          manualChunks(id) {
-            if (
-              id.includes("packages/excalidraw/locales") &&
-              id.match(/en.json|percentages.json/) === null
-            ) {
-              const index = id.indexOf("locales/");
-              // Taking the substring after "locales/"
-              return `locales/${id.substring(index + 8)}`;
-            }
-          },
+          // In library mode, manualChunks is generally not needed.
+          // If you do require custom chunk splitting for locales or other assets,
+          // you can add that logic here.
         },
       },
-      sourcemap: true,
-      // don't auto-inline small assets (i.e. fonts hosted on CDN)
-      assetsInlineLimit: 0,
     },
     plugins: [
+      // Note: For a library build you might not need some of these plugins.
       Sitemap({
         hostname: "https://excalidraw.com",
         outDir: "build",
         changefreq: "monthly",
-        // its static in public folder
         generateRobotsTxt: false,
       }),
       woff2BrowserPlugin(),
@@ -123,12 +129,10 @@ export default defineConfig(({ mode }) => {
       VitePWA({
         registerType: "autoUpdate",
         devOptions: {
-          /* set this flag to true to enable in Development mode */
           enabled: envVars.VITE_APP_ENABLE_PWA === "true",
         },
-
         workbox: {
-          // don't precache fonts, locales and separate chunks
+          maximumFileSizeToCacheInBytes: 30 * 1024 * 1024, // 30MB
           globIgnores: [
             "fonts.css",
             "**/locales/**",
@@ -146,7 +150,6 @@ export default defineConfig(({ mode }) => {
                   maxAgeSeconds: 60 * 60 * 24 * 90, // 90 days
                 },
                 cacheableResponse: {
-                  // 0 to cache "opaque" responses from cross-origin requests (i.e. CDN)
                   statuses: [0, 200],
                 },
               },
@@ -168,7 +171,7 @@ export default defineConfig(({ mode }) => {
                 cacheName: "locales",
                 expiration: {
                   maxEntries: 50,
-                  maxAgeSeconds: 60 * 60 * 24 * 30, // <== 30 days
+                  maxAgeSeconds: 60 * 60 * 24 * 30, // 30 days
                 },
               },
             },
@@ -179,7 +182,7 @@ export default defineConfig(({ mode }) => {
                 cacheName: "chunk",
                 expiration: {
                   maxEntries: 50,
-                  maxAgeSeconds: 60 * 60 * 24 * 90, // <== 90 days
+                  maxAgeSeconds: 60 * 60 * 24 * 90, // 90 days
                 },
               },
             },
@@ -213,7 +216,7 @@ export default defineConfig(({ mode }) => {
             },
           ],
           start_url: "/",
-          id:"excalidraw",
+          id: "excalidraw",
           display: "standalone",
           theme_color: "#121212",
           background_color: "#ffffff",
